name: Play Store Deploy

on:
  workflow_dispatch:
    inputs:
      track:
        description: "Play track to upload to"
        type: choice
        options: [internal, alpha, beta, production]
        default: internal
        required: true
      release_status:
        description: "Release status on Play"
        type: choice
        options: [draft, inProgress, completed, halted]
        default: draft
        required: true
      user_fraction:
        description: "Staged rollout fraction for inProgress (0.0 - 1.0). Ignored otherwise."
        type: string
        default: "0.1"
        required: false
  push:
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: '17'
      BUNDLE_DIR: app/build/outputs/bundle/release
      MAPPING_DIR: app/build/outputs/mapping/release
      WRAPPER_GRADLE_VERSION: '8.7'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Ensure Gradle Wrapper (auto-install Gradle if missing)
        run: |
          set -e
          if [[ ! -f gradlew ]]; then
            curl -s https://get.sdkman.io | bash
            source "$HOME/.sdkman/bin/sdkman-init.sh"
            sdk install gradle $WRAPPER_GRADLE_VERSION
            gradle wrapper --gradle-version $WRAPPER_GRADLE_VERSION
          fi
          chmod +x gradlew

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Extract versionName from tag (if present)
        id: ver
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            RAW="${GITHUB_REF_NAME#v}"
            echo "versionName=$RAW" >> "$GITHUB_OUTPUT"
          else
            echo "versionName=" >> "$GITHUB_OUTPUT"
          fi

      - name: Build Release AAB
        run: |
          if [[ -n "${{ steps.ver.outputs.versionName }}" ]]; then
            ./gradlew bundleRelease -PversionName=${{ steps.ver.outputs.versionName }} --stacktrace
          else
            ./gradlew bundleRelease --stacktrace
          fi

      - name: Sign AAB
        id: sign
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ${{ env.BUNDLE_DIR }}
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Verify signed file exists
        run: |
          ls -la "${{ steps.sign.outputs.signedReleaseFile }}"
          ls -la "${{ env.MAPPING_DIR }}" || true

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.example.swiftconvert
          releaseFiles: ${{ steps.sign.outputs.signedReleaseFile }}
          track: ${{ github.event.inputs.track || 'internal' }}
          status: ${{ github.event.inputs.release_status || 'draft' }}
          userFraction: ${{ github.event.inputs.user_fraction || '0.1' }}
          mappingFile: ${{ env.MAPPING_DIR }}/mapping.txt

      - name: Upload artifact (signed AAB)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: signed-release-aab
          path: ${{ steps.sign.outputs.signedReleaseFile }}
